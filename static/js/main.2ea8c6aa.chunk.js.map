{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChanges","className","type","onChange","Card","props","src","monster","id","alt","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIe,SAASA,EAAT,GAAoD,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cAC7C,OACI,qBAAKC,UAAU,SAAf,SACI,uBAAOC,KAAK,SACZH,YAAaA,EACbI,SAAUH,M,UCLTI,EAAO,SAAAC,GAChB,OACI,sBAAKJ,UAAU,iBAAf,UACI,qBAAKK,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,0BAAoEC,IAAKJ,EAAME,QAAQG,OAC/F,6BAAKL,EAAME,QAAQG,OACnB,4BAAIL,EAAME,QAAQI,YCOfC,G,MAVE,SAAAP,GACb,OACI,qBAAKJ,UAAU,YAAf,SACKI,EAAMQ,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCiCpBO,G,wDAlCb,aAAe,IAAD,8BACZ,gBAYFf,cAAgB,SAAAgB,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEJ,SAAUa,S,oBAOhI,WACE,MAAkCC,KAAKN,MAA/BR,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YACZU,EAAmBf,EAASgB,QAAO,SAAAtB,GAAO,OAAIA,EAAQG,KAAKoB,cAAcC,SAASb,EAAYY,kBAEpG,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAACH,EAAD,CACEC,YAAc,iBACdC,cAAiB2B,KAAK3B,gBAExB,cAAC,EAAD,CAAUa,SAAUe,W,GA7BVI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2ea8c6aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport default function SearchBox({ placeholder, handleChanges }) {\r\n    return (\r\n        <div className=\"search\">\r\n            <input type=\"search\" \r\n            placeholder={placeholder} \r\n            onChange={handleChanges}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name} />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\n\nimport SearchBox from './components/search-box/search-box.component';\n\nimport CardList from './components/card-list/card-list.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ monsters: users }));\n  }\n\n  handleChanges = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder = \"search monster\"\n          handleChanges = {this.handleChanges}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}